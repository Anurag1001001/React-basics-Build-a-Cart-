[{"E:\\Coding NInjas practices\\React\\cart\\src\\index.js":"1","E:\\Coding NInjas practices\\React\\cart\\src\\App.js":"2","E:\\Coding NInjas practices\\React\\cart\\src\\CartItem.js":"3","E:\\Coding NInjas practices\\React\\cart\\src\\cart.js":"4","E:\\Coding NInjas practices\\React\\cart\\src\\Navbar.js":"5"},{"size":635,"mtime":1608365479227,"results":"6","hashOfConfig":"7"},{"size":6393,"mtime":1608465979242,"results":"8","hashOfConfig":"7"},{"size":3558,"mtime":1608294254568,"results":"9","hashOfConfig":"7"},{"size":1095,"mtime":1608293692936,"results":"10","hashOfConfig":"7"},{"size":1078,"mtime":1608294816593,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nb5z1w",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"E:\\Coding NInjas practices\\React\\cart\\src\\index.js",[],["24","25"],"E:\\Coding NInjas practices\\React\\cart\\src\\App.js",["26"],"E:\\Coding NInjas practices\\React\\cart\\src\\CartItem.js",["27"],"import React from 'react';\r\n\r\nconst CartItem = (props) =>{\r\n    // increaseQuantity = () => {\r\n    //     // state will get change by this way also but react will not reflect it to client side, so chnage the state use setState() \r\n    //     // this.state.Qty += 1\r\n        \r\n\r\n        \r\n    //     // setState method-1\r\n    //     this.setState({\r\n    //         Qty: this.state.Qty + 1\r\n    //     });\r\n\r\n\r\n    //     // setState method-2\r\n    //     //  Instead of passing object over there we'll pass callback function \r\n    //     // Use this method when prevState is required\r\n    //     // this.setState((prevState) =>{\r\n    //     //     // Calling setState() simply means that rerendering the page if state changes\r\n    //     //     return {\r\n    //     //         Qty: this.state.Qty + 1\r\n    //     //     }\r\n    //     // });        \r\n    // }\r\n\r\n    // // decrease Quantity\r\n    // decreaseQuantity = () => {\r\n    //     // Object destructuring \r\n    //     const {Qty} = this.state\r\n    //     if (Qty == 0){\r\n    //         return\r\n    //     }\r\n    //         console.log('this', this.state);\r\n    //         // setState method-1\r\n    //         this.setState({\r\n    //             Qty: this.state.Qty - 1\r\n    //         });       \r\n    // }\r\n\r\n        // Every instance of cart Item will have a property called props and inside that props we'll get the data which we're passing attribute in cart.js(parent component)\r\n        \r\n        // console.log('this.props', props);\r\n        \r\n        // object destructuring\r\n        // product as  a object send hua h(as a props ) so ese likha h this.props.product \r\n        const {price, title, Qty, id} = props.product;\r\n        const {onDeleteProduct} = props;\r\n        return(\r\n            \r\n            <div className =\"cart-item\">\r\n                <div className=\"left-block\">\r\n                    <img style = {styles.image} />\r\n                </div>\r\n                <div className=\"right-block\">\r\n                    <div style = {{fontSize:25}}>{title}</div>\r\n                    <div style = {{color:'#777'}}>Rs {price}</div>\r\n                    <div style = {{color: '#777'}}>Qty: {Qty}</div>\r\n                    <div className=\"cart-item-actions\">\r\n                        {/* {Button } */}\r\n                        <img\r\n                         alt=\"increase\"\r\n                         className=\"action-icons\" \r\n                         src=\"https://as2.ftcdn.net/jpg/01/07/62/07/500_F_107620769_UwNVSoXnKS4VNcOKoZjPohlEPn83oE38.jpg\"\r\n                         onClick = {() => props.onIncreaseQuantity(props.product)}\r\n                         />\r\n                        <img\r\n                         alt=\"decrease\"\r\n                         className=\"action-icons\" \r\n                         src=\"https://www.flaticon.com/premium-icon/icons/svg/2740/2740679.svg\"\r\n                         onClick = {() => props.onDecreaseQuantity(props.product)}\r\n                          />\r\n                        <img\r\n                         alt=\"delete\" \r\n                         className=\"action-icons\" \r\n                         src=\"https://t4.ftcdn.net/jpg/00/98/26/11/240_F_98261175_Sv69O3rZsHApYkjAdrWbgQixYHwyZyOr.jpg\" \r\n                         onClick = {() => onDeleteProduct(id) }\r\n                         />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n} \r\n\r\nconst styles = {\r\n    image: {\r\n        height:110,\r\n        width:110,\r\n        borderRadius:4,\r\n        background: '#777'\r\n    }\r\n}\r\n\r\nexport default CartItem;","E:\\Coding NInjas practices\\React\\cart\\src\\cart.js",[],"E:\\Coding NInjas practices\\React\\cart\\src\\Navbar.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":135,"column":14,"nodeType":"34","messageId":"35","endLine":135,"endColumn":22},{"ruleId":"36","severity":1,"message":"37","line":53,"column":21,"nodeType":"38","endLine":53,"endColumn":51},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]